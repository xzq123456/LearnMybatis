<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis02.dao.EmployeeMapper">
    <select id="getEmpById" resultType="emp">
    select * from employee where id=#{id}
    </select>

    <!-- public void addEmp(Employee employee); -->
    <!--id要和接口定义的方法名一致  parameterType 也可以用全类名，也可以用别名 7·-->
    <!--mybatis获取自增主键  useGeneratedKeys="true"
    keyProperty="" 获取到指定主键封装给baen的那个属性
    Oracle不支持自增 mybatis也有对应的方法
    -->
    <insert id="addEmp" parameterType="emp" useGeneratedKeys="true" keyProperty="id">
        insert  into employee(last_name,email,gender) values(#{lastName},#{email},#{gender})
    </insert>

    <!--public void updateEmp(Employee employee);-->
    <update id="updateEmp" >
        update employee set last_name=#{lastName},email=#{email},gender=#{gender}
        where id=#{id}
    </update>

    <!--  public void deleteEmp(Integer id);-->
    <delete id="deleteEmp">
        delete from employee where id=#{id}
    </delete>

<!--public Employee getEmpByIdAndLastName(Integer id,String lastName);-->
    <!--<select id="getEmpByIdAndLastName" resultType="emp">-->
    <!--select * from employee where id=#{param1} and last_name=#{param2}-->
    <!--</select>-->

    <select id="getEmpByIdAndLastName" resultType="emp">
    select * from employee where id=#{id} and last_name=#{lastName}
    </select>

    <!--public Employee getEmpByMap(Map<String,Object> map);
    sql预编译的重要  防止sql注入:https://www.cnblogs.com/ygj0930/p/5876951.html
    只能取出参数位置的值进行预编译 tableName不是参数所以用 ${tableName}
    -->
     <select id="getEmpByMap" resultType="emp">
         select  * from ${tableName} where id=${id} and last_name=#{lastName}
     </select>

    <!--public List<Employee> getEmpsByNameLike(String lastName);-->
    <!--要写集合的元素类型-->
    <select id="getEmpsByNameLike"  resultType="emp">
        select * from employee where last_name like #{lastName}
    </select>

    <!--public Map<String ,Object> getEmpByIdRetuenMap(Integer id);-->
    <!--别名  Map==>map-->
    <select id="getEmpByIdRetuenMap" resultType="map">
        select * from employee where id=#{id}
    </select>

    <!--public Map<Integer,Employee> getEmpsByLastNameReturnMap(String lastName);-->
    <!--result 是返回每条封装记录的类型-->
    <select id="getEmpsByLastNameReturnMap" resultType="emp">
        select * from employee where last_name like #{lastName}
    </select>






</mapper>